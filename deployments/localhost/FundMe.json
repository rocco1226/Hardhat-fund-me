{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "i_owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "s_addressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "s_funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "s_priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x9ea3a5223825fa1cf91a15d5d510ebc092a49dd2c2dafeaaf7d1731358da19a7",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1017081",
        "logsBloom": "0x
        "blockHash": "0xcde18c7e2da65cd7f7eb30c64498275ce45b550035f19c3a4d77495bcf4b5b4d",
        "transactionHash": "0x9ea3a5223825fa1cf91a15d5d510ebc092a49dd2c2dafeaaf7d1731358da19a7",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1017081",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "9c3db241bdc1189f87636f08be12287e",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rocco Zha\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"The contract will only fund if the conversion rate is greater than the MINIMUM_USD\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function allows you to fund the contract\"}},\"notice\":\"You can use this contract for crowd funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.0;\\n\\n//import\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Error codes\\nerror FundMe__NotOwner(); //\\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\u7c7b\\u578b\\n\\n//Interfaces, Libraries, Contract\\n\\n///\\u6216\\u8005/** */ NatSpec\\u98ce\\u683c\\u6ce8\\u91ca\\n\\n/** @title A contract for crowd funding\\n *  @author Rocco Zha\\n *  @notice You can use this contract for crowd funding\\n *  @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256; //\\u5f15\\u5165Library PriceConverter\\u5230uint\\n\\n    //State Variables\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n\\n    address[] public s_funders; //\\u8bb0\\u5f55\\u6350\\u8d60\\u8005\\u7684\\u5730\\u5740\\u7684\\u6570\\u7ec4\\n    mapping(address => uint256) public s_addressToAmountFunded; //\\u6620\\u5c04\\uff0c\\u5730\\u5740\\u5230\\u6570\\u76ee\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"sender is not i_owner!\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner(); //revert\\u56de\\u6eda\\u4ea4\\u6613\\uff0c\\u62a5\\u51fa\\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\u7c7b\\u578bFundMe_NotOwner\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress); //\\u6211\\u4eec\\u5c06helper-hardhat-config.js\\u4e2d\\u7684ethUsdPriceFeed\\u4f20\\u516501-deploy-fund-me.js\\u7684ethUsdPriceFeedAddress\\u4e2d\\uff0c\\u7136\\u540e\\u4f5c\\u4e3a\\u53c2\\u6570\\u4f20\\u5165FundMe.sol\\u7684\\u6784\\u9020\\u51fd\\u6570\\n    } //\\u5bf9\\u4e8epricefeed\\u7684\\u5730\\u5740\\uff0c\\u6211\\u4eec\\u53ef\\u4ee5\\u5728\\u90e8\\u7f72\\u5408\\u7ea6\\u7684\\u65f6\\u5019\\u4f20\\u5165(\\u53c2\\u6570\\u5316\\u8bbe\\u7f6e)\\uff0c\\u5c06\\u5b83\\u4fdd\\u5b58\\u8fdb\\u4e00\\u4e2aAggregatorV3Interface\\u7c7b\\u578b\\u7684\\u5168\\u5c40\\u53d8\\u91cf\\u4e2d\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /** @notice This function allows you to fund the contract\\n     * @dev The contract will only fund if the conversion rate is greater than the MINIMUM_USD\\n     */\\n\\n    function fund() public payable {\\n        require(\\n            PriceConverter.getConversionRate(msg.value, s_priceFeed) >=\\n                MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender); //\\u8bb0\\u5f55\\u5730\\u5740\\n        s_addressToAmountFunded[msg.sender] = msg.value; //\\u8bb0\\u5f55\\u6620\\u5c04\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        /* starting index, ending index, step amount */\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex = funderIndex + 1\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0); //\\u91cd\\u7f6e\\u6570\\u7ec4\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders; //\\u4e00\\u6b21\\u6027\\u5c06storage\\u4e2d\\u7684s_funders\\u8bfb\\u5165memory\\u4e2d\\uff0c\\u53ef\\u4ee5\\u8282\\u7701gas\\n        //mapping\\u4e0d\\u80fd\\u5b58\\u50a8\\u4e8ememory\\u4e2d\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n}\\n\\n//order of layout\\n//1.pragma statements\\n//2.Import statements\\n//3.interfaces\\n//4.library\\n//5.contract\\n\\n//inside contract,library or interface\\n//1.Type declarations\\n//2.state variables\\n//3.events\\n//4.modifers\\n//5.functions\\n\\n//\\u4e0d\\u662f\\u6240\\u6709\\u7684state variables\\u90fd\\u9700\\u8981public\\uff0c\\u6211\\u4eec\\u53ef\\u4ee5\\u4fee\\u6539\\u6210private\\u6216Internal\\uff0c\\u7136\\u540e\\u4e3a\\u4ed6\\u4eec\\u589e\\u52a0\\u4e00\\u4e2a\\u51fd\\u6570\\u8fd4\\u56de\\u5176\\u503c\\n// \\u4f8b\\uff1a\\n// function getOwner() public view returns (address){\\n//     return i_owner;\\n// }\\n\",\"keccak256\":\"0x94147386f3c7455fdc1fa88ccef092bf10660fe539030bdbaa0b1c235c83e941\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; //\\u7f16\\u8bd1\\u4e00\\u4e2a\\u63a5\\u53e3\\uff0c\\u6211\\u4eec\\u5c31\\u80fd\\u5f15\\u5165\\u5916\\u90e8ABI\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306 //\\u6211\\u4eec\\u5728\\u8fd9\\u91cc\\u4f7f\\u7528\\u4e86\\u786c\\u7f16\\u7801\\u6765\\u5f15\\u5165ABI\\uff0c\\u4f46\\u662f\\u6211\\u4eec\\u53ef\\u4ee5\\u5c06\\u5176\\u6a21\\u5757\\u5316\\uff0c\\u4ee5\\u4fbf\\u4e8e\\u5e94\\u5bf9\\u4e0d\\u540c\\u7684\\u533a\\u5757\\u94fe\\uff08\\u56e0\\u4e3a\\u6bcf\\u4e2a\\u533a\\u5757\\u94fe\\u5bf9\\u5e94\\u7684pricefeed\\u7684ABI\\u90fd\\u4e0d\\u4e00\\u6837\\uff0c\\u6211\\u4eec\\u672c\\u6765\\u9700\\u8981\\u5728\\u5408\\u7ea6\\u5185\\u90e8\\u4fee\\u6539\\uff0c\\u73b0\\u5728\\u53ea\\u8bb8\\u4fee\\u6539\\u5176\\u53c2\\u6570)\\n        // );\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData(); //pricefeed8\\u4f4d\\u5c0f\\u6570\\n        return uint(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethprice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethprice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n\\n    // function getVersion(\\n    //     AggregatorV3Interface priceFeed\\n    // ) internal view returns (uint256) {\\n    //     // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //     //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     // ); //\\u6211\\u4eec\\u5728\\u8fd9\\u91cc\\u4f7f\\u7528\\u4e86\\u786c\\u7f16\\u7801\\u6765\\u5f15\\u5165ABI\\uff0c\\u4f46\\u662f\\u6211\\u4eec\\u53ef\\u4ee5\\u5c06\\u5176\\u6a21\\u5757\\u5316\\uff0c\\u4ee5\\u4fbf\\u4e8e\\u5e94\\u5bf9\\u4e0d\\u540c\\u7684\\u533a\\u5757\\u94fe\\uff08\\u56e0\\u4e3a\\u6bcf\\u4e2a\\u533a\\u5757\\u94fe\\u5bf9\\u5e94\\u7684pricefeed\\u7684ABI\\u90fd\\u4e0d\\u4e00\\u6837\\uff0c\\u6211\\u4eec\\u672c\\u6765\\u9700\\u8981\\u5728\\u5408\\u7ea6\\u5185\\u90e8\\u4fee\\u6539\\uff0c\\u73b0\\u5728\\u53ea\\u8bb8\\u4fee\\u6539\\u5176\\u53c2\\u6570)\\n\\n    //     return priceFeed.version();\\n    // } \\u8fd9\\u91cc\\u662f\\u4e00\\u4e2a\\u4f8b\\u5b50\\uff0c\\u6211\\u4eec\\u53ef\\u4ee5\\u901a\\u8fc7ABI\\u6765\\u83b7\\u53d6pricefeed\\u7684\\u7248\\u672c\\u53f7\\uff0c\\u6211\\u4eec\\u4e0d\\u9700\\u8981\\u5b83\\n}\\n\",\"keccak256\":\"0x6ddb13bcb8c1ded7a392c6f9e1a99854db352317f88ac8fd4b3dbc66c3dd690d\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200128d3803806200128d833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611107620001866000396000818161031d015281816105a90152818161079f015261083701526111076000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102dd565b6040516100ba9190610a5b565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ab9565b610303565b6040516100f79190610aff565b60405180910390f35b34801561010c57600080fd5b5061011561031b565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b46565b61055c565b60405161014b9190610b82565b60405180910390f35b34801561016057600080fd5b5061016961059b565b6040516101769190610aff565b60405180910390f35b6101876101be565b005b6101916105a7565b005b34801561019f57600080fd5b506101a8610835565b6040516101b59190610b82565b60405180910390f35b678ac7230489e800006101f334600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610859565b1015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610bfa565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561044c5760008082815481106103c5576103c4610c1a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816104459190610c78565b90506103a3565b50600067ffffffffffffffff81111561046857610467610cce565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50600090805190602001906104ac929190610935565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d390610d2e565b60006040518083038185875af1925050503d8060008114610510576040519150601f19603f3d011682016040523d82523d6000602084013e610515565b606091505b5050905080610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610d8f565b60405180910390fd5b50565b6000818154811061056c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106af57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610665575b5050505050905060005b815181101561073a5760008282815181106106d7576106d6610c1a565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073290610daf565b9150506106b9565b50600067ffffffffffffffff81111561075657610755610cce565b5b6040519080825280602002602001820160405280156107845781602001602082028036833780820191505090505b506000908051906020019061079a929190610935565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e190610d2e565b60006040518083038185875af1925050503d806000811461081e576040519150601f19603f3d011682016040523d82523d6000602084013e610823565b606091505b505090508061083157600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061086583610895565b90506000670de0b6b3a7640000858361087e9190610df8565b6108889190610e81565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190610f3f565b5050509150506402540be4008161092d9190610fba565b915050919050565b8280548282559060005260206000209081019282156109ae579160200282015b828111156109ad5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610955565b5b5090506109bb91906109bf565b5090565b5b808211156109d85760008160009055506001016109c0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a21610a1c610a17846109dc565b6109fc565b6109dc565b9050919050565b6000610a3382610a06565b9050919050565b6000610a4582610a28565b9050919050565b610a5581610a3a565b82525050565b6000602082019050610a706000830184610a4c565b92915050565b600080fd5b6000610a86826109dc565b9050919050565b610a9681610a7b565b8114610aa157600080fd5b50565b600081359050610ab381610a8d565b92915050565b600060208284031215610acf57610ace610a76565b5b6000610add84828501610aa4565b91505092915050565b6000819050919050565b610af981610ae6565b82525050565b6000602082019050610b146000830184610af0565b92915050565b610b2381610ae6565b8114610b2e57600080fd5b50565b600081359050610b4081610b1a565b92915050565b600060208284031215610b5c57610b5b610a76565b5b6000610b6a84828501610b31565b91505092915050565b610b7c81610a7b565b82525050565b6000602082019050610b976000830184610b73565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610be4601383610b9d565b9150610bef82610bae565b602082019050919050565b60006020820190508181036000830152610c1381610bd7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8382610ae6565b9150610c8e83610ae6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cc357610cc2610c49565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d18600083610cfd565b9150610d2382610d08565b600082019050919050565b6000610d3982610d0b565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610d79600c83610b9d565b9150610d8482610d43565b602082019050919050565b60006020820190508181036000830152610da881610d6c565b9050919050565b6000610dba82610ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ded57610dec610c49565b5b600182019050919050565b6000610e0382610ae6565b9150610e0e83610ae6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4757610e46610c49565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8c82610ae6565b9150610e9783610ae6565b925082610ea757610ea6610e52565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ed181610eb2565b8114610edc57600080fd5b50565b600081519050610eee81610ec8565b92915050565b6000819050919050565b610f0781610ef4565b8114610f1257600080fd5b50565b600081519050610f2481610efe565b92915050565b600081519050610f3981610b1a565b92915050565b600080600080600060a08688031215610f5b57610f5a610a76565b5b6000610f6988828901610edf565b9550506020610f7a88828901610f15565b9450506040610f8b88828901610f2a565b9350506060610f9c88828901610f2a565b9250506080610fad88828901610edf565b9150509295509295909350565b6000610fc582610ef4565b9150610fd083610ef4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100f5761100e610c49565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104c5761104b610c49565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108957611088610c49565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c6576110c5610c49565b5b82820290509291505056fea26469706673582212205e9581bd4049198a41ceb28e494f00b3370a6b0662a6c619ee52966ae01caf3064736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102dd565b6040516100ba9190610a5b565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ab9565b610303565b6040516100f79190610aff565b60405180910390f35b34801561010c57600080fd5b5061011561031b565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b46565b61055c565b60405161014b9190610b82565b60405180910390f35b34801561016057600080fd5b5061016961059b565b6040516101769190610aff565b60405180910390f35b6101876101be565b005b6101916105a7565b005b34801561019f57600080fd5b506101a8610835565b6040516101b59190610b82565b60405180910390f35b678ac7230489e800006101f334600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610859565b1015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610bfa565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561044c5760008082815481106103c5576103c4610c1a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816104459190610c78565b90506103a3565b50600067ffffffffffffffff81111561046857610467610cce565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50600090805190602001906104ac929190610935565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d390610d2e565b60006040518083038185875af1925050503d8060008114610510576040519150601f19603f3d011682016040523d82523d6000602084013e610515565b606091505b5050905080610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610d8f565b60405180910390fd5b50565b6000818154811061056c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106af57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610665575b5050505050905060005b815181101561073a5760008282815181106106d7576106d6610c1a565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073290610daf565b9150506106b9565b50600067ffffffffffffffff81111561075657610755610cce565b5b6040519080825280602002602001820160405280156107845781602001602082028036833780820191505090505b506000908051906020019061079a929190610935565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e190610d2e565b60006040518083038185875af1925050503d806000811461081e576040519150601f19603f3d011682016040523d82523d6000602084013e610823565b606091505b505090508061083157600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061086583610895565b90506000670de0b6b3a7640000858361087e9190610df8565b6108889190610e81565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190610f3f565b5050509150506402540be4008161092d9190610fba565b915050919050565b8280548282559060005260206000209081019282156109ae579160200282015b828111156109ad5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610955565b5b5090506109bb91906109bf565b5090565b5b808211156109d85760008160009055506001016109c0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a21610a1c610a17846109dc565b6109fc565b6109dc565b9050919050565b6000610a3382610a06565b9050919050565b6000610a4582610a28565b9050919050565b610a5581610a3a565b82525050565b6000602082019050610a706000830184610a4c565b92915050565b600080fd5b6000610a86826109dc565b9050919050565b610a9681610a7b565b8114610aa157600080fd5b50565b600081359050610ab381610a8d565b92915050565b600060208284031215610acf57610ace610a76565b5b6000610add84828501610aa4565b91505092915050565b6000819050919050565b610af981610ae6565b82525050565b6000602082019050610b146000830184610af0565b92915050565b610b2381610ae6565b8114610b2e57600080fd5b50565b600081359050610b4081610b1a565b92915050565b600060208284031215610b5c57610b5b610a76565b5b6000610b6a84828501610b31565b91505092915050565b610b7c81610a7b565b82525050565b6000602082019050610b976000830184610b73565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610be4601383610b9d565b9150610bef82610bae565b602082019050919050565b60006020820190508181036000830152610c1381610bd7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8382610ae6565b9150610c8e83610ae6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cc357610cc2610c49565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d18600083610cfd565b9150610d2382610d08565b600082019050919050565b6000610d3982610d0b565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610d79600c83610b9d565b9150610d8482610d43565b602082019050919050565b60006020820190508181036000830152610da881610d6c565b9050919050565b6000610dba82610ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ded57610dec610c49565b5b600182019050919050565b6000610e0382610ae6565b9150610e0e83610ae6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4757610e46610c49565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8c82610ae6565b9150610e9783610ae6565b925082610ea757610ea6610e52565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ed181610eb2565b8114610edc57600080fd5b50565b600081519050610eee81610ec8565b92915050565b6000819050919050565b610f0781610ef4565b8114610f1257600080fd5b50565b600081519050610f2481610efe565b92915050565b600081519050610f3981610b1a565b92915050565b600080600080600060a08688031215610f5b57610f5a610a76565b5b6000610f6988828901610edf565b9550506020610f7a88828901610f15565b9450506040610f8b88828901610f2a565b9350506060610f9c88828901610f2a565b9250506080610fad88828901610edf565b9150509295509295909350565b6000610fc582610ef4565b9150610fd083610ef4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100f5761100e610c49565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104c5761104b610c49565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108957611088610c49565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c6576110c5610c49565b5b82820290509291505056fea26469706673582212205e9581bd4049198a41ceb28e494f00b3370a6b0662a6c619ee52966ae01caf3064736f6c63430008080033",
    "devdoc": {
        "author": "Rocco Zha",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "The contract will only fund if the conversion rate is greater than the MINIMUM_USD"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function allows you to fund the contract"
            }
        },
        "notice": "You can use this contract for crowd funding",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 66,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
